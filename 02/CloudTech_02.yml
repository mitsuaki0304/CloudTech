AWSTemplateFormatVersion: '2010-09-09'
Description: cloudtech_01 VPC and Subnet Create

Parameters:
  Prefix:
    Type: String
    Default: "cloudtech"
  VpcCidrBlock: 
    Type: String
    Default: "10.0.0.0/16"
  PublicSubnetCidrBlock: 
    Type: String
    Default: "10.0.1.0/24"
  PrivateSubnetCidrBlock: 
    Type: String
    Default: "10.0.2.0/24"

Resources:
# ------------------------------------------------------------#
#  VPC
# ------------------------------------------------------------#
# VPC Create
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}-VPC"

# ------------------------------------------------------------#
#  Subnet
# ------------------------------------------------------------#       
# Public Subnet1A Create
  PublicSubnet1A:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1a
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCidrBlock
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}-PublicSubnet1A"

#02課題では使用しないのでコメントアウトを実施
# Private Subnet1A Create
  # PrivateSubnet1A:
  #   Type: AWS::EC2::Subnet
  #   Properties:
  #     AvailabilityZone: ap-northeast-1a
  #     VpcId: !Ref VPC
  #     CidrBlock: !Ref PrivateSubnetCidrBlock
  #     Tags:
  #       - Key: Name
  #         Value: !Sub "${Prefix}-PrivateSubnet1A"

# ------------------------------------------------------------#
#  InternetGateway
# ------------------------------------------------------------#    
# InternetGateway Create
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}-InternetGateway"
          
# InternetGateway Attach
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

# ------------------------------------------------------------#
#  RouteTable
# ------------------------------------------------------------#    
# Public RouteTableA Create
  PublicRouteTableA: 
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}-PublicRouteTableA"

# ------------------------------------------------------------#
#  Routing
# ------------------------------------------------------------# 
#Public RouteTableA Setting
  PublicRouteA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTableA
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

# ------------------------------------------------------------#
# RouteTable Associate
# ------------------------------------------------------------# 
# PublicRouteTable Associate SubnetA
  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTableA
      SubnetId: !Ref PublicSubnet1A


# ------------------------------------------------------------#
# SsmSessionManager
# ------------------------------------------------------------# 
# SsmSessionManager Setting 
  SsmSessionManagerIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  SsmSessionManagerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - !Ref SsmSessionManagerIamRole

# ------------------------------------------------------------#
# SecGroupName
# ------------------------------------------------------------# 
# SecGroupName Setting EC2
  SecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: GroupName-SG
      GroupDescription: GroupDescription-SG
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}-SecGroup"

Outputs:
  VPC:
    Value: !Ref VPC
    Export:
      Name: VPC

  Subnet1A:
    Value: !Ref PublicSubnet1A
    Export:
      Name: Subnet1A
  
  SG1:
    Value: !GetAtt SecGroup.GroupId
    Export:
      Name: SG1
      
  InstanceProfile:
    Value: !Ref SsmSessionManagerInstanceProfile
    Export:
      Name: InstanceProfile